#+TITLE: Oracle 11g for OEM 
* Overview
Use vagrant to provision and provide oracle 11g for oem
* Setup
Database zip files are in current directory (you can unzip the database files if you wish, or the provisioning process will do it for you)
+ DB template file :: 11.2.0.3_Database_Template_for_EM12_1_0_4_Linux_x64.zip
+ DB zip files :: 
  + p10404530_112030_Linux-x86-64_1of7.zip
  + p10404530_112030_Linux-x86-64_2of7.zip
* Operation
** Update the system
#+BEGIN_SRC sh :tangle setup.sh :shebang "#!/bin/bash"
sudo yum -y update
#+END_SRC
** Install prerequisite packages
#+BEGIN_SRC sh :tangle setup.sh
sudo yum -y install unzip oracle-rdbms-server-11gR2-preinstall
#+END_SRC
** Configure oracle user for no password and to be a valid ssh user
#+BEGIN_SRC sh :tangle setup.sh
echo oracle | passwd --stdin
sudo echo -e 'oracle\tALL=(ALL)\tNOPASSWD: ALL' >/etc/sudoers.d/oracle
sudo cp -r ~vagrant/.ssh ~oracle
sudo chown -R oracle:oinstall ~oracle
#+END_SRC
** Configure oracle environment
#+BEGIN_SRC sh :tangle setup.sh
cat <<EOF  >>/home/oracle/.bash_profile
export ORACLE_BASE=/u01/app/oracle 
export ORACLE_HOME=\${ORACLE_BASE:?}/product/11.2.0/db_1
export ORACLE_SID=oemrepo
export PATH=\$PATH:\$ORACLE_HOME/bin
EOF
#+END_SRC
** Configure oracle for Enterprise Manager
#+BEGIN_SRC sh :tangle setup.sh
sudo sed -i -e '/requiretty$/s/^/#/' -e'/visiblepw$/s/!//'  /etc/sudoers
#+END_SRC
** Construct the base directory
#+BEGIN_SRC sh :tangle setup.sh
sudo mkdir -p /u01/app/oracle
sudo chown -R oracle:oinstall /u01
#+END_SRC
** Unzip the database files
=-u= flag means if the files are already there then do nothing.
The output will be in =/vagrant/database=
#+BEGIN_SRC sh :tangle setup.sh
[ -d /vagrant/database ] || {
unzip -u -d /vagrant p10404530_112030_Linux-x86-64_1of7.zip
unzip -u -d /vagrant p10404530_112030_Linux-x86-64_2of7.zip
}
#+END_SRC
** Install the database
This is the critical need for setting up the =oracle= user - if using '=su -c "..." - oracle= then the installer spawns off a sub-process that is the same user as the originating ssh user - if that's not =oracle= then the system will fail.
#+BEGIN_SRC sh :tangle setup.sh
/vagrant/database/runInstaller -silent -ignorePrereq -responseFile /vagrant/db.rsp -waitforcompletion
#+END_SRC

** Configure the listener
#+BEGIN_SRC sh :tangle setup.sh
netca -silent -responseFile $ORACLE_HOME/assistants/netca/netca.rsp
#+END_SRC
** Unzip the database template zip
#+BEGIN_SRC sh :tangle setup.sh
unzip -u -d ${ORACLE_HOME:?}/assistants/dbca/templates /vagrant/11.2.0.3_Database_Template_for_EM12_1_0_4_Linux_x64.zip
#+END_SRC
** Clone the templates to create the database
#+BEGIN_SRC sh :tangle setup.sh
dbca -silent -createDatabase -responseFile /vagrant/dbca.rsp
#+END_SRC
** Install and configure the dbora service
#+BEGIN_SRC sh :tangle setup.sh
sudo cp /vagrant/dbora /etc/init.d
sudo chmod 755 /etc/init.d/dbora
sudo chkconfig --add dbora

if [[ -f /etc/oratab ]]
then
    sed -i 's/N$/Y/' /etc/oratab
else
    echo "$ORACLE_SID:$ORACLE_HOME:Y" >/tmp/oratab
    sudo mv /tmp/oratab /etc
fi    

service dbora start
#+END_SRC
** Patch the database
#+BEGIN_SRC sh :tangle setup.sh
sqlplus / as sysdba @/vagrant/patch.sql
#+END_SRC
